<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.community.spring.mapper.UserMapper">
    
    <resultMap id="UserResultMap" type="com.community.spring.domain.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="email" column="email"/>
        <result property="password" column="password"/>
        <result property="nickname" column="nickname"/>
        <result property="profileImageUrl" column="profile_image_url"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="isActive" column="is_active"/>
    </resultMap>
    
    <insert id="insertUser" parameterType="com.community.spring.domain.User" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO users (username, email, password, nickname, profile_image_url, is_active)
        VALUES (#{username}, #{email}, #{password}, #{nickname}, #{profileImageUrl}, #{isActive})
    </insert>
    
    <select id="findByUsername" resultMap="UserResultMap">
        SELECT * FROM users WHERE username = #{username} AND is_active = TRUE
    </select>
    
    <select id="findByEmail" resultMap="UserResultMap">
        SELECT * FROM users WHERE email = #{email} AND is_active = TRUE
    </select>
    
    <select id="findById" resultMap="UserResultMap">
        SELECT * FROM users WHERE id = #{id} AND is_active = TRUE
    </select>
    
    <update id="updateUser" parameterType="com.community.spring.domain.User">
        UPDATE users SET
            nickname = #{nickname},
            profile_image_url = #{profileImageUrl},
            updated_at = CURRENT_TIMESTAMP
        WHERE id = #{id}
    </update>
    
    <update id="deleteUser">
        UPDATE users SET is_active = FALSE, updated_at = CURRENT_TIMESTAMP WHERE id = #{id}
    </update>
    
    <!-- 게시글 수 -->
    <select id="countPostsByUserId" resultType="long">
        SELECT COUNT(*) FROM posts WHERE user_id = #{userId} AND is_deleted = FALSE
    </select>

    <!-- 댓글 수 -->
    <select id="countCommentsByUserId" resultType="long">
        SELECT COUNT(*) FROM comments WHERE user_id = #{userId} AND is_deleted = FALSE
    </select>

    <!-- 프로필 이미지 업데이트 -->
    <update id="updateProfileImage">
        UPDATE users SET profile_image_url = #{profileImageUrl}, updated_at = CURRENT_TIMESTAMP
        WHERE username = #{username}
    </update>

    <!-- 내 게시글 목록 -->
    <select id="findPostsByUserId" resultMap="com.community.spring.mapper.PostMapper.PostResultMap">
        SELECT p.*, u.nickname as user_nickname, u.profile_image_url as user_profile_image_url
        FROM posts p
        LEFT JOIN users u ON p.user_id = u.id
        WHERE p.user_id = #{userId} AND p.is_deleted = FALSE
        ORDER BY p.created_at DESC
    </select>

    <!-- 내 댓글 목록 -->
    <select id="findCommentsByUserId" resultMap="com.community.spring.mapper.CommentMapper.CommentResultMap">
        SELECT c.*, u.nickname as user_nickname, u.profile_image_url as user_profile_image_url
        FROM comments c
        LEFT JOIN users u ON c.user_id = u.id
        WHERE c.user_id = #{userId} AND c.is_deleted = FALSE
        ORDER BY c.created_at DESC
    </select>

</mapper>